@using Radzen
@using Microsoft.AspNetCore.Components
@using RemoteMaster.Client.Models;
@inject ContextMenuService ContextMenuService
@inject IJSRuntime JsRuntime

<div @oncontextmenu:preventDefault="true" @oncontextmenu="@(args => ShowContextMenu(args))">
    <RadzenCard Style="width: 256px; height: 192px;" class="computer-card">
        <div class="p-3">
            <RadzenImage Path="https://placehold.co/500x300" Style="height: 128px; width: 100%; object-fit: cover;" />
            <div class="d-flex justify-content-between align-items-center mt-3">
                <RadzenLabel Text="@Computer.Name" />
                <RadzenButton Icon="more_vert" Style="border: none; background: transparent;"
                @onclick="@(args => ShowContextMenu(args))" />
            </div>
        </div>
    </RadzenCard>
</div>

@code {
    [Parameter]
    public Computer Computer { get; set; }

    void ShowContextMenu(MouseEventArgs args)
    {
        ContextMenuService.Open(args,
            new List<ContextMenuItem> {
            new ContextMenuItem(){ Text = "Open Command", Value = "Command", Icon = "terminal" },
            new ContextMenuItem(){ Text = "Open in Tab", Value = "Tab", Icon = "link" },
            }, OnMenuItemClick);
    }

    async void OnMenuItemClick(MenuItemEventArgs args)
    {
        if (args.Value.Equals("Command"))
        {
            // Put your command action here
        }
        else if (args.Value.Equals("Tab"))
        {
            await JsRuntime.InvokeVoidAsync("open", $"http://127.0.0.1:5254/{Computer.IPAddress}/control", "_blank");
        }

        ContextMenuService.Close();
    }
}
