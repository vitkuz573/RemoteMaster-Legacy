@using RemoteMaster.Client.Services;
@using RemoteMaster.Shared.Dtos;
@inherits LayoutComponentBase
@inject ControlFunctionsService ControlFuncsService

<PageTitle>RemoteMaster.Client - Control</PageTitle>

<div class="relative h-screen w-screen overflow-hidden flex justify-center items-center">
    <div class="absolute h-full w-full bg-gray-800 text-white p-6">
        <div class="flex items-center justify-between">
            <h1 class="text-2xl font-bold">Control Panel</h1>
            <button @onclick="ToggleMenu" class="absolute right-6 top-1/2 transform -translate-y-1/2 px-3 py-2 rounded-lg bg-gray-500 hover:bg-gray-600 focus:outline-none opacity-50 @($"{(isMenuOpen ? "-translate-x-80" : "translate-x-0")}")">
                <span class="sr-only">Open Menu</span>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                </svg>
            </button>
        </div>
        <div class="mt-6 h-full w-full overflow-y-auto">
            @Body
        </div>
    </div>

    <aside class="fixed right-0 top-0 h-screen w-80 bg-white transform-gpu transition-transform duration-500 ease-in-out shadow-2xl overflow-y-auto" style="transform: @(isMenuOpen ? "translateX(0)" : "translateX(100%)");">
        <div class="p-6">
            <div class="flex items-center justify-between mb-8">
                <h2 class="text-2xl font-semibold">Actions</h2>
                <button @onclick="ToggleMenu" class="px-2 py-2 rounded-full bg-red-500 hover:bg-red-600 focus:outline-none">
                    <span class="sr-only">Close Menu</span>
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
            <ul class="space-y-2">
                <li>
                    <div class="flex items-center space-x-2">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8h18a1 1 0 011 1v6a1 1 0 01-1 1H3a1 1 0 01-1-1V9a1 1 0 011-1zm0 12h18" />
                        </svg>
                        <h3 class="text-gray-600">Switch Screen</h3>
                    </div>
                    <div class="relative inline-flex mt-2">
                        <svg class="w-2 h-2 absolute top-0 right-0 m-4 pointer-events-none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 412 232"><path d="M206 171.144L42.678 7.822c-9.763-9.763-25.592-9.763-35.355 0-9.763 9.763-9.763 25.592 0 35.355l189.21 189.211c9.372 9.373 24.749 9.373 34.121 0l189.21-189.211c9.763-9.763 9.763-25.592 0-35.355-9.763-9.763-25.592-9.763-35.355 0L206 171.144z" fill="#648299" fill-rule="nonzero" /></svg>
                        <select class="border border-gray-300 rounded-full text-gray-600 h-10 pl-5 pr-10 bg-white hover:border-gray-400 focus:outline-none appearance-none" @onchange="OnChangeScreen">
                            @if (ControlFuncsService.Displays != null)
                            {
                                var displayList = ControlFuncsService.Displays.ToList();

                                @for (int i = 0; i < displayList.Count; i++)
                                {
                                    var (displayName, isPrimary, resolution) = displayList[i];
                                    var screenName = "Screen " + (i + 1);

                                    <option value="@displayName" selected="@isPrimary">@screenName (@resolution.Width x @resolution.Height)</option>
                                }
                            }
                        </select>
                    </div>
                </li>
                <!-- Add more actions here -->
                <li>
                    <div class="flex items-center space-x-2">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-green-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                        </svg>
                        <h3 class="text-gray-600">Change Quality</h3>
                    </div>
                    <div class="relative inline-flex mt-2">
                        <input type="number" min="1" max="100" value="50" class="border border-gray-300 rounded-full text-gray-600 h-10 pl-5 pr-5 bg-white hover:border-gray-400 focus:outline-none" @onchange="OnChangeQuality">
                    </div>
                </li>
            </ul>
            <div class="mt-4 text-lg font-semibold border-t pt-4">Dangerous Actions</div>
            <ul class="mt-2 space-y-2">
                <li class="flex items-center space-x-2">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-red-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                    <a class="text-red-500 hover:text-red-600 hover:underline" @onclick="ControlFuncsService.KillServer">Kill Server</a>
                </li>
                <li class="flex items-center space-x-2">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-red-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                    <a class="text-red-500 hover:text-red-600 hover:underline" @onclick="ControlFuncsService.RebootComputer">Reboot Computer</a>
                </li>
            </ul>
        </div>
    </aside>
</div>

<style>
    .translate-x-80 {
        transform: translateX(-80px);
    }
</style>

@code {
    private bool isMenuOpen = false;

    private void ToggleMenu()
    {
        isMenuOpen = !isMenuOpen;
    }

    private void OnChangeScreen(ChangeEventArgs e)
    {
        ControlFuncsService.SelectDisplay(e.Value.ToString());
    }

    private void OnChangeQuality(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value.ToString(), out int quality) && quality >= 1 && quality <= 100)
        {
            ControlFuncsService.SetQuality(quality);
        }
        else
        {
            // Необходимо обработать случай, когда введенное значение не является числом от 1 до 100.
        }
    }
}
