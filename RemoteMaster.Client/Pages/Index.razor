@page "/"
@using RemoteMaster.Client.Models;
@using RemoteMaster.Client.Components;

<div class="container mx-auto py-6 px-4">

    <div class="flex justify-between mb-4">
        <Button Color="Color.Primary" Clicked="GetComputersFromAD" class="btn btn-blue">
            <i class="fas fa-sync-alt mr-2"></i> Get Computers from AD
        </Button>

        <div class="space-x-4">
            <Button Color="Color.Primary" Clicked="(() => _addFolderRef.Show())" class="btn btn-blue">
                <i class="fas fa-folder-plus mr-2"></i> Add Folder
            </Button>

            <Button Color="Color.Primary" Clicked="(() => _addComputerManualRef.Show())" class="btn btn-blue">
                <i class="fas fa-desktop mr-2"></i> Add Computer
            </Button>
        </div>
    </div>

    <AddComputerFromAD @ref="_addComputerFromADRef" />

    <AddFolder @ref="_addFolderRef" Nodes="_nodes" />
    <AddComputerManual @ref="_addComputerManualRef" Nodes="_nodes" />

    <Row class="grid grid-cols-3 gap-4">

        <Column class="col-span-1 border-r">
            <Card class="border rounded-lg p-4">
                <TreeView Nodes="_nodes" GetChildNodes="@(node => (node as Folder)?.Children)" HasChildNodes="@(node => node is Folder)" @bind-SelectedNode="_selectedNode" @bind-ExpandedNodes="_expandedNodes">
                    <NodeContent>
                        <Icon Name="@((_expandedNodes.Contains(context) && context is Folder) ? context.ExpandedIcon : context.Icon)" />
                        @context.Name
                    </NodeContent>
                </TreeView>
            </Card>
        </Column>

        <Column class="col-span-2 grid grid-cols-4 gap-4">
            @if (_selectedNode is Folder selectedFolder)
            {
                foreach (var child in selectedFolder.Children)
                {
                    if (child is Computer computer)
                    {
                        <ComputerCard Computer="computer" OnOpenShell="OpenShell" OnOpenInNewTab="OpenInNewTab" />
                    }
                }
            }
        </Column>

    </Row>

    <Snackbar @ref="_getComputersFromADStatusSnackbar" Color="SnackbarColor.Secondary">
        <SnackbarBody>
            @_getComputersFromADStatus
            <SnackbarAction Clicked="(() => _getComputersFromADStatusSnackbar.Hide())">Hide</SnackbarAction>
        </SnackbarBody>
    </Snackbar>

</div>
