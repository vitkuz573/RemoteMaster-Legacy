@using RemoteMaster.Client.Models
@using System.Collections.ObjectModel

<Modal @ref="_modalRef">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Add Computer</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel>Name</FieldLabel>
                <TextEdit @bind-Text="_newComputer.Name" Placeholder="Enter Computer Name" />
            </Field>
            <Field>
                <FieldLabel>IP Address</FieldLabel>
                <TextEdit @bind-Text="_newComputer.IPAddress" Placeholder="Enter IP Address" />
            </Field>
            <Field>
                <FieldLabel>Parent Folder</FieldLabel>
                <Select TValue="Guid?" @bind-Value="_selectedFolderId" Placeholder="Select Folder" SelectedValueChanged="@OnSelectedFolderChanged">
                    @foreach (var folder in Nodes.OfType<Folder>())
                    {
                        <SelectItem Value="@folder.NodeId">@folder.Name</SelectItem>
                    }
                </Select>
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="Hide">Close</Button>
            <Button Color="Color.Primary" Clicked="AddComputer">Add</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    public Modal _modalRef;
    public Computer _newComputer = new Computer();
    public Guid? _selectedFolderId;

    public void Show()
    {
        _modalRef.Show();
    }

    public void Hide()
    {
        _modalRef.Hide();
    }

    public void AddComputer()
    {
        OnAdd.InvokeAsync((_newComputer, _selectedFolderId));
        _newComputer = new Computer();
        _selectedFolderId = null;
        Hide();
    }

    private void OnSelectedFolderChanged(Guid? selectedId)
    {
        Console.WriteLine($"Selected folder ID changed to: {selectedId}");
        _selectedFolderId = selectedId;
    }

    [Parameter]
    public ObservableCollection<Node> Nodes { get; set; }

    [Parameter]
    public EventCallback<(Computer, Guid?)> OnAdd { get; set; }
}
