name: .NET Core CI with Coverage

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install npm packages
      working-directory: RemoteMaster.Server
      run: npm install

    - name: Restore dependencies
      run: dotnet restore

    - name: Create solution without Windows projects
      shell: pwsh
      run: |
        Copy-Item -Path RemoteMaster.sln -Destination RemoteMaster.NoWindows.sln
        dotnet sln RemoteMaster.NoWindows.sln remove RemoteMaster.Host.Windows/RemoteMaster.Host.Windows.csproj
        dotnet sln RemoteMaster.NoWindows.sln remove RemoteMaster.Host.Windows.Tests/RemoteMaster.Host.Windows.Tests.csproj

    - name: Build non-Windows projects
      run: dotnet build RemoteMaster.NoWindows.sln --configuration Release --no-restore

    - name: Build Windows project
      run: msbuild RemoteMaster.Host.Windows/RemoteMaster.Host.Windows.csproj /p:Configuration=Release

    - name: Build Windows test project
      run: msbuild RemoteMaster.Host.Windows.Tests/RemoteMaster.Host.Windows.Tests.csproj /p:Configuration=Release

    - name: Run tests for non-Windows projects with coverage
      run: |
        dotnet test RemoteMaster.NoWindows.sln --no-build --configuration Release --collect:"XPlat Code Coverage" --results-directory ./TestResults --logger "trx;LogFileName=TestResults.trx"

    - name: Run tests for Windows project with coverage
      run: |
        dotnet test RemoteMaster.Host.Windows.Tests/RemoteMaster.Host.Windows.Tests.csproj --no-build --configuration Release --collect:"XPlat Code Coverage" --results-directory ./TestResults --logger "trx;LogFileName=TestResults.trx"

    - name: List test results directory
      run: |
        dir TestResults
        dir TestResults\coverage

    - name: Report generator
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:**/coverage.cobertura.xml -targetdir:./TestResults/coverage/report

    - name: Upload coverage report
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: ./TestResults/coverage/report
