// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RemoteMaster.Server.Data;

#nullable disable

namespace RemoteMaster.Server.Migrations
{
    [DbContext(typeof(NodesDataContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("RemoteMaster.Server.Models.Node", b =>
                {
                    b.Property<Guid>("NodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NodeType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("TEXT");

                    b.HasKey("NodeId");

                    b.HasIndex("ParentId");

                    b.ToTable("Nodes");

                    b.HasDiscriminator<string>("NodeType").HasValue("Node");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("RemoteMaster.Server.Models.Computer", b =>
                {
                    b.HasBaseType("RemoteMaster.Server.Models.Node");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MACAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Computer");
                });

            modelBuilder.Entity("RemoteMaster.Server.Models.Folder", b =>
                {
                    b.HasBaseType("RemoteMaster.Server.Models.Node");

                    b.HasDiscriminator().HasValue("Folder");
                });

            modelBuilder.Entity("RemoteMaster.Server.Models.Node", b =>
                {
                    b.HasOne("RemoteMaster.Server.Models.Node", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("RemoteMaster.Server.Models.Node", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
