@page "/"
@using RemoteMaster.Server.Models
@using RemoteMaster.Server.Components
@using RemoteMaster.Shared.Models

<MudLayout>
    <MudAppBar Color="Color.Primary" Fixed="false" Dense="true">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="ToggleDrawer" />
        <MudSpacer />
        <LoginDisplay />
    </MudAppBar>

    <MudDrawer @bind-Open="@_isMenuOpen" Variant="@DrawerVariant.Responsive">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Remote Master</MudText>
        </MudDrawerHeader>
        <MudNavMenu>
            <MudNavLink Match="NavLinkMatch.All" OnClick="OpenHostConfigGenerator" Icon="@Icons.Material.Filled.BuildCircle">Host Configuration Generator</MudNavLink>
        </MudNavMenu>
    </MudDrawer>

    <div class="flex h-screen overflow-x-hidden overflow-y-hidden select-none">

        <div class="bg-gray-100 p-4 overflow-y-auto">
            <MudTreeView Items="@_nodes" T="Node" SelectedValueChanged="OnNodeSelected" Hover="true">
                <ItemTemplate>
                    <MudTreeViewItem Items="@context.Nodes" Value="@context" Text="@context.Name" />
                </ItemTemplate>
            </MudTreeView>
        </div>

        <div class="flex-grow p-4 flex flex-col gap-4 bg-gray-300">
            <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
                <MudTabPanel Text="Main" Icon="@Icons.Material.Filled.Api">
                    <div class="border-gray-500 w-full flex">
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Power" Disabled="@(_selectedComputers.Count == 0)" Class="mr-2">Power</MudButton>
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Connect" Disabled="@(_selectedComputers.Count == 0)" Class="mr-2">Connect</MudButton>
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="OpenShell" Disabled="@(_selectedComputers.Count == 0)" Class="mr-2">Open Shell</MudButton>
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="ExecuteScript" Disabled="@(_selectedComputers.Count == 0)" Class="mr-2">Execute Script</MudButton>
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="HandleRefreshClick" Class="ml-auto">Refresh</MudButton>
                    </div>
                </MudTabPanel>

                <MudTabPanel Text="Service" Icon="@Icons.Material.Filled.MiscellaneousServices">
                    <div class="border-gray-500 w-full flex">
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="SetMonitorState" Disabled="@(_selectedComputers.Count == 0)" Class="mr-2">Set Monitor State</MudButton>
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="ManagePSExecRules" Disabled="@(_selectedComputers.Count == 0)" Class="mr-2">PSExec Rules</MudButton>
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="ScreenRecorder" Disabled="@(_selectedComputers.Count == 0)" Class="mr-2">Screen Recorder</MudButton>
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="DomainMember" Disabled="@(_selectedComputers.Count == 0)" Class="mr-2">Domain Management</MudButton>
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Update" Disabled="@(_selectedComputers.Count == 0)" Class="mr-2">Update</MudButton>
                    </div>
                </MudTabPanel>
            </MudTabs>

            <div class="flex flex-wrap gap-4 items-start overflow-y-auto">
                @if (_selectedNode is Folder selectedFolder)
                {
                    foreach (var child in selectedFolder.Nodes)
                    {
                        if (child is Computer computer)
                        {
                            <div class="w-1/6">
                                <ComputerCard @key="computer" Computer="computer" IsSelectedChanged="@(isSelected => HandleComputerSelection(computer, isSelected))" />
                            </div>
                        }
                    }
                }
            </div>
        </div>

    </div>
</MudLayout>
