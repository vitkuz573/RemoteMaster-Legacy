@page "/"
@using Radzen
@using RemoteMaster.Server.Models
@using RemoteMaster.Server.Components

<div class="bg-blue-600 text-white py-2 font-semibold select-none flex justify-between items-center">
    <div></div> <!-- Этот пустой div нужен для "выравнивания" flexbox -->
    <div>Remote Control</div>
    <div class="flex items-center space-x-4">
        <RadzenButton Text="Config Generator" Click="OpenClientConfigGenerator" />
        <LoginDisplay />
    </div>
</div>

<div class="flex h-screen overflow-x-hidden overflow-y-hidden select-none">

    <div class="bg-gray-100 p-4 overflow-y-auto">
        <RadzenTree Data="_entries" Change="OnTreeChange" Expand="LoadComputers" Style="list-style-type: none;">
            <RadzenTreeLevel Text="GetTextForNode" Template="NodeTemplate" />
        </RadzenTree>
    </div>

    <div class="flex-grow p-4 flex flex-col gap-4 bg-gray-300 selectable-container">
        <!-- Область для кнопок -->
        <div class="border-b border-gray-500 pb-2 mb-2 w-full flex">
            <RadzenSplitButton Text="Connect" Disabled="@(!_anyComputerSelected)" Click="@(args => Connect(args))" class="mr-2">
                <ChildContent>
                    <RadzenSplitButtonItem Text="Control" Value="control" />
                    <RadzenSplitButtonItem Text="View" Value="view" />
                </ChildContent>
            </RadzenSplitButton>

            <RadzenSplitButton Text="Open Shell" Disabled="@(!_anyComputerSelected)" Click="@(args => OpenShell(args))" class="mr-2">
                <ChildContent>
                    <RadzenSplitButtonItem Text="Command line" Value="cmd" />
                    <RadzenSplitButtonItem Text="PowerShell" Value="powershell" />
                    <RadzenSplitButtonItem Text="Command line (System)" Value="cmd" />
                    <RadzenSplitButtonItem Text="PowerShell (System)" Value="powershell" />
                    <RadzenSplitButtonItem Text="SSH" Value="ssh" />
                </ChildContent>
            </RadzenSplitButton>

            <RadzenSplitButton Text="Power" Disabled="@(!_anyComputerSelected)" Click="@(args => Power(args))" class="mr-2">
                <ChildContent>
                    <RadzenSplitButtonItem Text="Shutdown" Value="shutdown" />
                    <RadzenSplitButtonItem Text="Reboot" Value="reboot" />
                    <RadzenSplitButtonItem Text="Wake Up" Value="wakeup" />
                </ChildContent>
            </RadzenSplitButton>

            <RadzenButton Text="Update" Disabled="@(!_anyComputerSelected)" Click="Update" class="mr-2" />

            <RadzenSplitButton Text="Screen Recording" Disabled="@(!_anyComputerSelected)" Click="@(args => ScreenRecording(args))" class="mr-2">
                <ChildContent>
                    <RadzenSplitButtonItem Text="Start" Value="start" />
                    <RadzenSplitButtonItem Text="Stop" Value="stop" />
                </ChildContent>
            </RadzenSplitButton>

            <RadzenSplitButton Text="Set Monitor State" Disabled="@(!_anyComputerSelected)" Click="@(args => SetMonitorState(args))" class="mr-2">
                <ChildContent>
                    <RadzenSplitButtonItem Text="On" Value="on" />
                    <RadzenSplitButtonItem Text="Standby" Value="standby" />
                    <RadzenSplitButtonItem Text="Off" Value="off" />
                </ChildContent>
            </RadzenSplitButton>

            <RadzenButton Text="Execute Script" Disabled="@(!_anyComputerSelected)" Click="ExecuteScript" class="mr-2" />

            <RadzenSplitButton Text="PSExec Rules" Disabled="@(!_anyComputerSelected)" Click="@(args => ManagePSExecRules(args))" class="mr-2">
                <ChildContent>
                    <RadzenSplitButtonItem Text="Enable" Value="true" />
                    <RadzenSplitButtonItem Text="Disable" Value="false" />
                </ChildContent>
            </RadzenSplitButton>

            <RadzenButton Click="HandleRefreshClick" Text="Refresh" class="ml-auto" />
        </div>

        <!-- Контент с карточками ПК -->
        <div class="flex flex-wrap gap-4 items-start overflow-y-auto">
            @if (_selectedNode is Folder selectedFolder)
            {
                foreach (var child in selectedFolder.Children)
                {
                    if (child is Computer computer)
                    {
                        <div class="w-1/5 p-2">
                            <ComputerCard @key="computer" Computer="computer" IsSelectedChanged="@(isSelected => HandleComputerSelection(computer, isSelected))" />
                        </div>
                    }
                }
            }
        </div>
    </div>

</div>
