@page "/"
@using Radzen;
@using RemoteMaster.Server.Models;
@using RemoteMaster.Server.Components;

<div class="bg-blue-600 text-white text-center py-2 font-semibold select-none">
    Remote Control
</div>

<div class="flex h-screen overflow-x-hidden overflow-y-hidden select-none">

    <div class="bg-gray-100 p-4 overflow-y-auto">
        <RadzenTree Data="_entries" Change="OnTreeChange" Expand="LoadComputers" Style="list-style-type: none;">
            <RadzenTreeLevel Text="GetTextForNode" Template="NodeTemplate" />
        </RadzenTree>
    </div>

    <div class="flex-grow p-4 flex flex-col gap-4 bg-gray-300 selectable-container">
        <!-- Область для кнопок -->
        <div class="border-b border-gray-500 pb-2 mb-2 w-full flex">
            <!-- Переместите эти три кнопки в начало контейнера flex -->
            <RadzenButton Text="Manage" Disabled="@(!_anyComputerSelected)" Click="Manage" class="mr-2" />
            <RadzenButton Text="View" Disabled="@(!_anyComputerSelected)" class="mr-2" />
            <RadzenButton Text="Open CMD" Disabled="@(!_anyComputerSelected)" Click="OpenCmd" />

            <!-- Добавьте класс ml-auto к кнопке Refresh, чтобы она "отталкивалась" к правому краю -->
            <RadzenButton Click="HandleRefreshClick" Text="Refresh" class="ml-auto" />
        </div>

        <!-- Контент с карточками ПК -->
        <div class="flex flex-wrap gap-4 items-start overflow-y-auto">
            @if (_selectedNode is Folder selectedFolder)
            {
                foreach (var child in selectedFolder.Children)
                {
                    if (child is Computer computer)
                    {
                        <div class="w-1/4 p-2">
                            <ComputerCard @key="computer" Computer="computer" IsSelectedChanged="@(isSelected => HandleComputerSelection(computer, isSelected))" />
                        </div>
                    }
                }
            }
        </div>
    </div>

</div>
