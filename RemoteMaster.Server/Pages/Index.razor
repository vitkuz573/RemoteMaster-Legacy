@page "/"
@using RemoteMaster.Server.Models
@using RemoteMaster.Server.Components
@using RemoteMaster.Shared.Models

<MudLayout Class="select-none">
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
        <MudSpacer />
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Href="https://github.com/vitkuz573/RemoteMaster" Target="_blank" />
    </MudAppBar>

    <MudDrawer @bind-Open="@_isMenuOpen" Variant="@DrawerVariant.Responsive">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Remote Master</MudText>
        </MudDrawerHeader>
        <MudNavMenu>
            <MudNavLink Match="NavLinkMatch.All" OnClick="OpenHostConfigGenerator">Host Configuration Generator</MudNavLink>
            <MudNavLink Match="NavLinkMatch.All" OnClick="Logout">Logout</MudNavLink>
        </MudNavMenu>
    </MudDrawer>

    <MudMainContent>
        <div class="flex h-screen">

            <div class="p-4">
                <MudTreeView Items="@_nodes" T="Node" SelectedValueChanged="OnNodeSelected" Hover="true">
                    <ItemTemplate>
                        <MudTreeViewItem Items="@context.Nodes" Value="@context" Text="@context.Name" />
                    </ItemTemplate>
                </MudTreeView>
            </div>

            <div class="flex-grow p-4 flex flex-col gap-4 bg-gray-100">
                <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6 flex">
                    <MudTabPanel Text="Main" Icon="@Icons.Material.Filled.Api">
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Power" Disabled="@(_selectedComputers.Count == 0)" Class="mr-2">Power</MudButton>
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Connect" Disabled="@(_selectedComputers.Count == 0)" Class="mr-2">Connect</MudButton>
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="OpenShell" Disabled="@(_selectedComputers.Count == 0)" Class="mr-2">Open Shell</MudButton>
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="ExecuteScript" Disabled="@(_selectedComputers.Count == 0)" Class="mr-2">Execute Script</MudButton>
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="HandleRefreshClick" Class="ml-auto">Refresh</MudButton>
                    </MudTabPanel>

                    <MudTabPanel Text="Service" Icon="@Icons.Material.Filled.MiscellaneousServices">
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="SetMonitorState" Disabled="@(_selectedComputers.Count == 0)" Class="mr-2">Set Monitor State</MudButton>
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="ManagePSExecRules" Disabled="@(_selectedComputers.Count == 0)" Class="mr-2">PSExec Rules</MudButton>
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="ScreenRecorder" Disabled="@(_selectedComputers.Count == 0)" Class="mr-2">Screen Recorder</MudButton>
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="DomainMember" Disabled="@(_selectedComputers.Count == 0)" Class="mr-2">Domain Management</MudButton>
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Update" Disabled="@(_selectedComputers.Count == 0)" Class="mr-2">Update</MudButton>
                    </MudTabPanel>
                </MudTabs>

                <div class="flex flex-wrap gap-4">
                    @if (_selectedNode is Folder selectedFolder)
                    {
                        foreach (var child in _selectedNode.Nodes)
                        {
                            if (child is Computer computer)
                            {
                                <div class="w-1/6">
                                    <ComputerCard @key="computer" Computer="computer" IsSelectedChanged="@(isSelected => HandleComputerSelection(computer, isSelected))" />
                                </div>
                            }
                        }
                    }
                </div>
            </div>

        </div>
    </MudMainContent>
</MudLayout>
