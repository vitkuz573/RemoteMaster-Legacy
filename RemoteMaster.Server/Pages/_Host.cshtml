@page "/"
@using Microsoft.AspNetCore.Components.Web
@namespace RemoteMaster.Server.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="RemoteMaster.Server.styles.css" rel="stylesheet" />

    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&amp;display=swap" rel="stylesheet">

    <link href="css/compiled.css" rel="stylesheet" />

    <link rel="stylesheet" href="_content/Radzen.Blazor/css/standard-base.css">
    <link rel="icon" type="image/png" href="favicon.png"/>
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>

    <script src="_content/Radzen.Blazor/Radzen.Blazor.js"></script>

    <script>
        window.revokeUrl = URL.revokeObjectURL;

        window.createObjectBlobUrl = function (data, type) {
            return URL.createObjectURL(new Blob([data], { type: type }));
        }

        window.createImageBlobUrl = function (data) {
            return window.createObjectBlobUrl(data, 'image/jpeg');
        }

        window.addKeyEvent = function (event, dotnetHelper) {
            window['on' + event] = (e) => dotnetHelper.invokeMethodAsync('On' + event, e.keyCode);
        };

        window.setTitle = (title) => document.title = title;

        window.downloadFile = function (filename, data) {
            let url = window.createObjectBlobUrl(data, 'text/json');
            let a = document.createElement('a');
            a.href = url;
            a.download = filename;
            a.click();
            window.revokeUrl(url);
        };
    </script>
</body>
</html>
