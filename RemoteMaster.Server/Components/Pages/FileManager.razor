@page "/{Host}/filemanager"

@rendermode InteractiveServer

@using RemoteMaster.Server.Abstractions
@using RemoteMaster.Shared.Enums
@using System.IO.Abstractions

@inject IAccessTokenProvider AccessTokenProvider
@inject IJSRuntime JsRuntime
@inject ISnackbar SnackBar
@inject IHostAccessService HostAccessService
@inject IFileSystem FileSystem
@inject ILogger<FileManager> Logger

<PageTitle>File Manager</PageTitle>

<div class="flex h-screen">
    <!-- Right-side container -->
    <div class="flex h-full flex-1 flex-col p-4">
        <!-- Current selected path -->
        <div>
            <h3 class="text-sm font-semibold text-gray-500">Current Path:</h3>
            <div class="text-lg text-gray-900">
                @if (_currentPath != null)
                {
                    <span class="select-text">@_currentPath</span>
                }
                else
                {
                    <span class="text-gray-400">Select a directory to view its contents</span>
                }
            </div>
        </div>

        <!-- File manager actions -->
        <div class="mb-4 mt-4 flex items-center justify-between">
            <h3 class="border-b-2 border-gray-200 pb-2 text-lg font-semibold text-gray-600">Contents</h3>
            @if (_currentPath != null)
            {
                <div class="flex space-x-2">
                    <button class="rounded-sm bg-blue-500 px-4 py-2 text-white hover:bg-blue-600"
                            @onclick="CreateNewItem">
                        New Item
                    </button>
                    <button class="rounded-sm bg-red-500 px-4 py-2 text-white hover:bg-red-600"
                            @onclick="DeleteSelectedItem" disabled="@string.IsNullOrEmpty(_selectedItem)">
                        Delete
                    </button>
                    <!-- <InputFile OnChange="@OnInputFileChange" /> -->
                    <button class="rounded-sm bg-green-500 px-4 py-2 text-white hover:bg-green-600"
                            @onclick="UploadFile">
                        Upload File
                    </button>
                </div>
            }
        </div>

        <!-- File manager table -->
        <div class="flex-1 overflow-auto rounded-sm border border-gray-200">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="sticky top-0 bg-gray-50">
                    <tr>
                        <th scope="col" class="px-4 py-2 text-left text-sm font-medium text-gray-500">Name</th>
                        <th scope="col" class="px-4 py-2 text-left text-sm font-medium text-gray-500">Type</th>
                        <th scope="col" class="px-4 py-2 text-left text-sm font-medium text-gray-500">Size</th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-gray-200 bg-white">
                    @foreach (var item in _items)
                    {
                        var isSelected = _selectedItem == item.Name;
                        var selectedClass = isSelected ? "bg-blue-100 text-blue-800" : "hover:bg-gray-100";

                        <tr class="cursor-pointer @selectedClass"
                            @onclick="() => SelectItem(item)"
                            @ondblclick="() => HandleDoubleClick(item)">
                            <td class="px-4 py-2 text-sm text-gray-700">@item.Name</td>
                            <td class="px-4 py-2 text-sm text-gray-700">
                                @(item.Name == ".." ? "Parent Directory" : item.Type.ToString())
                            </td>
                            <td class="px-4 py-2 text-sm text-gray-700">
                                @(item.Type == FileSystemItemType.Drive || item.Type == FileSystemItemType.Directory || item.Name == ".." ? "-" : FormatSize(item.Size))
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
