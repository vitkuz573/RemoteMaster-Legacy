@page "/"
@using RemoteMaster.Server.Models

<PageTitle>RemoteMaster</PageTitle>

<FluentLayout>
    <FluentHeader>
        <FluentButton OnClick="OpenHomePanelAsync" IconStart="@(new Icons.Regular.Size24.PanelLeftExpand())" />
    </FluentHeader>

    <FluentStack Orientation="Orientation.Horizontal" Width="99%" HorizontalGap="30">
        <FluentTreeView OnSelectedChange="OnNodeSelected" Style="width: 250px">
            @foreach (var node in _nodes)
            {
                <RecursiveTreeView Node="node" />
            }
        </FluentTreeView>

        <FluentStack Orientation="Orientation.Vertical" Width="100%" VerticalGap="20">
            <FluentTabs ActiveTabId="tab-main">
                <FluentTab Id="tab-main" Label="Main">
                    <FluentButton Appearance="Appearance.Accent" Disabled=@(_selectedComputers.Count == 0) OnClick="@Power">Power</FluentButton>
                    <FluentButton Appearance="Appearance.Accent" Disabled=@(_selectedComputers.Count == 0) OnClick="@Connect">Connect</FluentButton>
                    <FluentButton Appearance="Appearance.Accent" Disabled=@(_selectedComputers.Count == 0) OnClick="@ConnectToShell">Connect to shell</FluentButton>
                    <FluentButton Appearance="Appearance.Accent" Disabled=@(_selectedComputers.Count == 0) OnClick="@ExecuteScript">Execute script</FluentButton>
                </FluentTab>
                <FluentTab Id="tab-service" Label="Service">
                    Tab two content. This is for testing.
                </FluentTab>
            </FluentTabs>

            @if (_currentSelected != null && _nodes.FirstOrDefault(x => x.Name == _currentSelected?.Text) is Folder folder)
            {
                <FluentGrid Spacing="1" Justify="JustifyContent.FlexStart">
                    @foreach (var child in folder.Nodes)
                    {
                        if (child is Computer computer)
                        {
                            <div style="width: 16.666667%">
                                <ComputerCard @key="computer" Computer="computer" IsSelectedChanged="@(isSelected => HandleComputerSelection(computer, isSelected))" />
                            </div>
                        }
                    }
                </FluentGrid>
            }
        </FluentStack>
    </FluentStack>
</FluentLayout>
