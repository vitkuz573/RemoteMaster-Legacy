@page "/{Host}/access"

@rendermode InteractiveServer

@using Microsoft.AspNetCore.Authorization
@using RemoteMaster.Server.Abstractions

@inject NavigationManager NavigationManager
@inject IQueryParameterService QueryParameterService
@inject IJSRuntime JsRuntime
@inject IAccessTokenProvider AccessTokenProvider
@inject ISnackbar SnackBar
@inject IAuthorizationService AuthorizationService
@inject IDialogService DialogService
@inject ISslWarningService SslWarningService
@inject ILogger<Access> Logger

<PageTitle>@_title</PageTitle>

<MudLayout>
    <MudAppBar Dense="true">
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.End" OnClick="@DrawerToggle" id="drawerToggleButton" />
    </MudAppBar>

    <MudDrawer @bind-Open="@_drawerOpen" Anchor="Anchor.End" Variant="@DrawerVariant.Responsive">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">
                Settings
            </MudText>
        </MudDrawerHeader>
        <MudNavMenu Color="Color.Info">
            <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.DisplaySettings">
                <MudSelect Value="@_selectedDisplay" ValueChanged="OnChangeScreen" Label="Display" T="string" Dense="true">
                    @foreach (var displayItem in GetDisplayItems())
                    {
                        <MudSelectItem Value="@displayItem.Name">@displayItem.DisplayName</MudSelectItem>
                    }
                </MudSelect>
            </MudNavLink>
            
            <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Hd">
                <MudSelect Value="@_selectedCodec" ValueChanged="OnChangeCodec" Label="Codec" T="string?" Dense="true">
                    @foreach (var codecItem in _codecs)
                    {
                        <MudSelectItem Value="@codecItem">@codecItem</MudSelectItem>
                    }
                </MudSelect>
            </MudNavLink>
            
            <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Speed">
                <MudText>Frame Rate</MudText>
                <MudSlider T="int" Value="@_frameRate" Min="10" Max="100" ValueChanged="ChangeFrameRate" />
            </MudNavLink>

            <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.HighQuality">
                <MudText>Image Quality</MudText>
                <MudSlider T="int" Value="@_imageQuality" Min="0" Max="100" ValueChanged="ChangeQuality" />
            </MudNavLink>

            <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.ControlPoint">
                <MudText>Draw Cursor</MudText>
                <MudSwitch T="bool" Value="@_drawCursor" ValueChanged="ToggleDrawCursor" />
            </MudNavLink>

            <AuthorizeView Roles="Administrator">
                <Authorized>
                    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Keyboard">
                        <MudText>Input</MudText>
                        <MudSwitch T="bool" Value="@_isInputEnabled" ValueChanged="EnableInput" />
                    </MudNavLink>
                    
                    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.DragIndicator">
                        <MudText>Click Indicator</MudText>
                        <MudSwitch T="bool" Value="@_isClickIndicatorEnabled" ValueChanged="EnableClickIndicator" />
                    </MudNavLink>

                    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.KeyboardHide">
                        <MudText>User Input</MudText>
                        <MudSwitch T="bool" Value="@_isUserInputEnabled" ValueChanged="ToggleUserInput" />
                    </MudNavLink>

                    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.DeleteSweep" OnClick="TerminateHost">Terminate Host</MudNavLink>
                    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Lock" OnClick="LockWorkStation">Lock Workstation</MudNavLink>
                    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Logout" OnClick="LogOffUser">Logoff User</MudNavLink>
                    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.ControlPoint" OnClick="SendCtrlAltDel" Disabled="@(_viewers.All(v => v.AuthenticationType != "RemoteMaster Security"))">Send Ctrl+Alt+Del</MudNavLink>
                    
                    <MudNavGroup Title="Power" Icon="@Icons.Material.Filled.Power">
                        <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.History" OnClick="RebootHost">Reboot Host</MudNavLink>
                        <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.PowerOff" OnClick="ShutdownHost">Shutdown Host</MudNavLink>
                    </MudNavGroup>
                </Authorized>
            </AuthorizeView>
            
            <MudNavGroup Title="System Information" Icon="@Icons.Material.Filled.Info">
                <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Https">
                    Transport Type: @_transportType
                </MudNavLink>

                <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Tab">OS: @_operatingSystem</MudNavLink>
                <MudNavLink Icon="@Icons.Material.Filled.Computer">Host Version: @_hostVersion (.NET @_dotNetVersion) </MudNavLink>
            </MudNavGroup>

            <MudNavGroup Title="@($"Viewers ({_viewers.Count})")" Icon="@Icons.Material.Filled.People">
                @if (_viewers.Any())
                {
                    <MudList T="string">
                        @foreach (var viewer in _viewers)
                        {
                            <MudListItem OnClick="() => DisconnectViewer(viewer.ConnectionId)">
                                <MudText>
                                    <b>ID:</b> @viewer.ConnectionId<br />
                                    <b>Group:</b> @viewer.Group<br />
                                    <b>Username:</b> @viewer.UserName<br />
                                    <b>Role:</b> @viewer.Role<br />
                                    <b>Connected:</b> @viewer.ConnectedTime.ToLocalTime()<br />
                                    <b>IP Address:</b> @viewer.IpAddress<br />
                                    <b>Authentication Type:</b> @viewer.AuthenticationType
                                </MudText>
                            </MudListItem>
                        }
                    </MudList>
                }
                else
                {
                    <MudText>No viewers connected</MudText>
                }
            </MudNavGroup>
        </MudNavMenu>
    </MudDrawer>

    <MudMainContent>
        <div class="flex h-screen items-center justify-center bg-gray-800 pb-14 text-white">
            @if (_isAccessDenied)
            {
                <p>Access Denied. Please contact the administrator.</p>
            }
            else if (!string.IsNullOrEmpty(_screenDataUrl))
            {
                <img @ref="_screenImageElement" src="@_screenDataUrl" @oncontextmenu:preventDefault="true" @oncontextmenu="_ => { }" draggable="false" class="@( _selectedDisplay == "VIRTUAL_SCREEN" ? "h-auto max-w-full" : "max-h-full w-auto" ) object-contain mx-auto" onload="@(async () => await OnLoad())" @onmousemove="OnMouseEvent" @onmousedown="OnMouseEvent" @onmouseup="OnMouseEvent" @onmouseover="OnMouseEvent" @onmousewheel="OnMouseWheel" alt="" />
            }
            else
            {
                <p>Establishing connection...</p>
            }
        </div>
    </MudMainContent>
</MudLayout>

<style>
    body {
        overflow: hidden;
    }
</style>
