@page "/{Host}/access"
@rendermode InteractiveServer
@attribute [Authorize]
@using Microsoft.AspNetCore.Authorization
@using RemoteMaster.Server.Abstractions
@inject NavigationManager NavigationManager
@inject IQueryParameterService QueryParameterService
@inject IHttpContextAccessor HttpContextAccessor
@inject IJSRuntime JsRuntime
@inject IAuthService AuthService
@inject ITokenService TokenService

<PageTitle>@_title</PageTitle>

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Dense="true">
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.End" OnClick="@DrawerToggle"/>
    </MudAppBar>

    <MudDrawer @bind-Open="@_drawerOpen" Anchor="Anchor.End" Variant="@DrawerVariant.Responsive">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">
                Settings
            </MudText>
        </MudDrawerHeader>
        <MudNavMenu>
            <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.DisplaySettings">
                <MudSelect Value="@_selectedDisplay" ValueChanged="OnChangeScreen" Label="Display" T="string" Dense="true">
                    @for (var i = 0; i < _displays.Count; i++)
                    {
                        var resolution = $"{_displays[i].Resolution.Width} x {_displays[i].Resolution.Height}";
                        var displayName = _displays[i].Name == "VIRTUAL_SCREEN"
                            ? $"Virtual Screen ({resolution})"
                            : $"Screen {i + 1} ({resolution})";

                        <MudSelectItem Value="_displays[i].Name">@displayName</MudSelectItem>
                    }
                </MudSelect>
            </MudNavLink>

            <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.HighQuality">
                <MudText>Image Quality</MudText>
                <MudSlider T="int" Value="@_imageQuality" Min="0" Max="100" ValueChanged="ChangeQuality"/>
            </MudNavLink>

            <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.ControlPoint">
                <MudText>Cursor Tracking</MudText>
                <MudSwitch T="bool" Value="_cursorTracking" ValueChanged="ToggleCursorTracking"/>
            </MudNavLink>

            <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Keyboard">
                <MudText>Input Toggle</MudText>
                <MudSwitch T="bool" Value="_inputEnabled" ValueChanged="ToggleInputEnabled"/>
            </MudNavLink>

            <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.DeleteSweep" OnClick="KillHost">Kill Host</MudNavLink>
            <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.ControlPoint" OnClick="SendCtrlAltDel">Send Ctrl+Alt+Del</MudNavLink>
            <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.History" OnClick="RebootComputer">Reboot Computer</MudNavLink>
            <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.PowerOff" OnClick="ShutdownComputer">Shutdown Computer</MudNavLink>

            <MudNavLink Icon="@Icons.Material.Filled.Computer">Host Version: @(_hostVersion)</MudNavLink>
        </MudNavMenu>
    </MudDrawer>

    <MudMainContent>
        <div class="flex h-screen items-center justify-center bg-gray-800 pb-14 text-white">
            @if (!string.IsNullOrEmpty(_screenDataUrl))
            {
                <img id="screenImage" src="@_screenDataUrl" @oncontextmenu:preventDefault="true" @oncontextmenu="_ => { }" draggable="false" class="@( _selectedDisplay == "VIRTUAL_SCREEN" ? "h-auto max-w-full" : "max-h-full w-auto" ) object-contain mx-auto" onload="window.revokeUrl(this.src)" @onmousemove="OnMouseEvent" @onmousedown="OnMouseEvent" @onmouseup="OnMouseEvent" @onmouseover="OnMouseEvent" @onmousewheel="OnMouseWheel" alt="" />
            }
            else
            {
                <p>Establishing connection...</p>
            }
        </div>
    </MudMainContent>
</MudLayout>

<style>
    body {
        overflow-y: hidden;
    }
</style>


