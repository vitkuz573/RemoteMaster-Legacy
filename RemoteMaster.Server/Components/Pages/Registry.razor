@page "/{Host}/registry"

@rendermode InteractiveServer

@using RemoteMaster.Server.Abstractions

@inject IAccessTokenProvider AccessTokenProvider
@inject IJSRuntime JsRuntime
@inject ILogger<Registry> Logger

<PageTitle>Registry</PageTitle>

<div class="flex h-screen">
    <!-- Sidebar for registry keys tree -->
    <div class="flex h-full w-1/4 flex-col bg-gray-100 p-4">
        <h2 class="mb-4 text-lg font-semibold">Registry Keys</h2>
        <div class="flex-1 overflow-auto">
            <ul class="whitespace-nowrap">
                @foreach (var rootNode in _rootNodes)
                {
                    @RenderRegistryNode(rootNode)
                }
            </ul>
        </div>
    </div>

    <!-- Right-side container -->
    <div class="flex-1 flex h-full flex-col p-4">
        <!-- Current selected registry path -->
        <div>
            <h3 class="text-sm font-semibold text-gray-500">Current Path:</h3>
            <div class="select-text text-lg text-gray-900">
                @if (_currentPath != null)
                {
                    @_currentPath
                }
                else
                {
                    <span class="text-gray-400">Select a key from the list</span>
                }
            </div>
        </div>

        <!-- Registry key values table -->
        <div class="flex-1 mt-4 overflow-auto">
            <h3 class="border-b-2 border-gray-200 pb-2 text-lg font-semibold text-gray-600">Values</h3>
            <table class="min-w-full table-auto">
                <thead class="z-10 sticky top-0 bg-gray-100">
                    <tr>
                        <th class="px-4 py-2 text-left text-xs font-semibold text-gray-500">Name</th>
                        <th class="px-4 py-2 text-left text-xs font-semibold text-gray-500">Type</th>
                        <th class="px-4 py-2 text-left text-xs font-semibold text-gray-500">Value</th>
                    </tr>
                </thead>
                <tbody class="bg-white">
                    @if (_registryValues.Any())
                    {
                        @foreach (var registryValue in _registryValues)
                        {
                            <tr class="border-t">
                                <td class="px-4 py-2 text-sm text-gray-700">@registryValue.Name</td>
                                <td class="px-4 py-2 text-sm text-gray-500">@registryValue.ValueType</td>
                                <td class="px-4 py-2 text-sm text-gray-500">
                                    @switch (registryValue.Value)
                                    {
                                        case byte[] byteArray:
                                        {
                                            var hexValue = BitConverter.ToString(byteArray).Replace("-", " ");
                                            <span>@hexValue</span>
                                            break;
                                        }
                                        case string strValue when IsRgbString(strValue):
                                            <div style="display: flex; align-items: center;">
                                                <span style="width: 16px; height: 16px; background-color: rgb(@GetRgbColorFromString(strValue)); margin-right: 8px;"></span>
                                                <span>@strValue</span>
                                            </div>
                                            break;
                                        default:
                                            <span>@registryValue.Value</span>
                                            break;
                                    }
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="3" class="px-4 py-2 text-center text-sm text-gray-400">No values to display</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
