@page "/Admin/RoleClaims"

@namespace RemoteMaster.Server.Components.Admin.Pages.Manage

@rendermode InteractiveServer

@using RemoteMaster.Server.Components.Account.Shared
@using RemoteMaster.Server.Data
@using RemoteMaster.Server.Models
@using RemoteMaster.Server.Abstractions
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Identity

@inject IServiceScopeFactory ScopeFactory
@inject NavigationManager NavigationManager

<PageTitle>Manage Role Claims</PageTitle>

<div class="mb-4">
    <label for="selectedRole" class="block text-sm font-medium text-gray-700">Select Role</label>
    <InputSelect id="selectedRole" Value="SelectedRoleId" ValueChanged="@(async (string roleId) => await OnRoleChanged(roleId))" ValueExpression="@(() => SelectedRoleId)" class="mt-1 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm">
        <option value="">Select a role</option>
        @foreach (var role in _roles)
        {
            <option value="@role.Id">@role.Name</option>
        }
    </InputSelect>
</div>

@if (!string.IsNullOrEmpty(SelectedRoleId))
{
    <EditForm Model="SelectedRoleModel" OnValidSubmit="OnValidSubmitAsync" class="space-y-6">
        <DataAnnotationsValidator />
        <ValidationSummary class="text-red-500" role="alert" />

        @if (ShowSuccessMessage)
        {
            <div class="text-sm text-green-600">
                Changes have been successfully saved.
            </div>
        }

        <div>
            <label for="claimType" class="block text-sm font-medium text-gray-700">Claim Type</label>
            <InputText id="claimType" @bind-Value="SelectedRoleModel.ClaimType" class="mt-1 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm" />
            <ValidationMessage For="() => SelectedRoleModel.ClaimType" class="text-red-500 mt-1" />
        </div>

        <div>
            <label for="claimValue" class="block text-sm font-medium text-gray-700">Claim Value</label>
            <InputText id="claimValue" @bind-Value="SelectedRoleModel.ClaimValue" class="mt-1 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm" />
            <ValidationMessage For="() => SelectedRoleModel.ClaimValue" class="text-red-500 mt-1" />
        </div>

        <button type="submit" class="mt-4 flex w-full justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-lg font-medium text-white shadow-sm hover:bg-indigo-700 disabled:opacity-50 disabled:cursor-not-allowed"
                disabled="@(!HasChanges)">
            Save
        </button>
    </EditForm>

    <div class="mt-8">
        <h2 class="text-xl font-medium text-gray-700">Existing Claims</h2>
        <ul class="mt-4 space-y-2">
            @foreach (var claim in _roleClaims)
            {
                <li class="flex items-center justify-between rounded-md bg-gray-100 px-4 py-2 shadow-sm">
                    <span>@claim.ClaimType: @claim.ClaimValue</span>
                    <button @onclick="() => DeleteClaim(claim)" class="text-red-500 hover:underline">Delete</button>
                </li>
            }
        </ul>
    </div>
}
