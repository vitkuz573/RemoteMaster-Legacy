@page "/Admin/RoleClaims"

@rendermode InteractiveServer

@using Microsoft.AspNetCore.Identity
@using RemoteMaster.Server.Abstractions
@using RemoteMaster.Server.Components.Account.Shared

@inject RoleManager<IdentityRole> RoleManager
@inject IApplicationClaimRepository ApplicationClaimRepository

<PageTitle>Manage Role Claims</PageTitle>

<StatusMessage UseHttpContext="false" Message="@_message" />

<div class="mb-4">
    <label for="selectedRole" class="block text-sm font-medium text-gray-700">Select Role</label>
    <InputSelect id="selectedRole" Value="SelectedRoleId" ValueChanged="@(async (string? roleId) => await OnRoleChanged(roleId))" ValueExpression="@(() => SelectedRoleId)" class="mt-1 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm">
        <option value="">Select a role</option>
        @foreach (var role in _roles)
        {
            <option value="@role.Id">@role.Name</option>
        }
    </InputSelect>
</div>

@if (!string.IsNullOrEmpty(SelectedRoleId))
{
    <EditForm Model="SelectedRoleModel" OnValidSubmit="OnValidSubmitAsync" class="space-y-6">
        <DataAnnotationsValidator />
        <ValidationSummary class="text-red-500" role="alert" />

        <div>
            @foreach (var claimType in _claimTypes)
            {
                <div class="mt-4">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center">
                            <label class="ml-2 text-sm font-medium text-gray-700">@claimType.Type</label>
                        </div>
                        <button type="button" @onclick="() => ToggleClaimTypeExpansion(claimType)" class="text-sm text-blue-500 hover:underline">
                            @(claimType.IsExpanded ? "Collapse" : "Expand")
                        </button>
                    </div>
                    @if (claimType.IsExpanded)
                    {
                        <div class="ml-6 mt-2 space-y-2">
                            <div class="mb-2 flex items-center">
                                <button type="button" @onclick="() => SelectAllClaimValues(claimType)" class="text-sm text-white bg-blue-500 hover:bg-blue-700 px-2 py-1 rounded disabled:opacity-50 disabled:cursor-not-allowed"
                                        disabled="@(claimType.Values.All(v => v.IsSelected))">
                                    Select All
                                </button>
                                <button type="button" @onclick="() => DeselectAllClaimValues(claimType)" class="ml-2 text-sm text-white bg-red-500 hover:bg-red-700 px-2 py-1 rounded disabled:opacity-50 disabled:cursor-not-allowed"
                                        disabled="@(claimType.Values.All(v => !v.IsSelected))">
                                    Deselect All
                                </button>
                            </div>
                            @foreach (var value in claimType.Values)
                            {
                                <div class="flex items-center">
                                    <InputCheckbox @bind-Value="value.IsSelected" class="form-checkbox h-4 w-4 text-indigo-600 transition duration-150 ease-in-out" />
                                    <label class="ml-2 text-sm font-medium text-gray-700">@value.Value</label>
                                    <span class="ml-2 text-sm text-gray-500">@value.Description</span> <!-- Вывод описания -->
                                </div>
                            }
                        </div>
                    }
                </div>
            }
        </div>

        <button type="submit" class="mt-4 flex w-full justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-lg font-medium text-white shadow-sm hover:bg-indigo-700 disabled:opacity-50 disabled:cursor-not-allowed"
                disabled="@(!HasChanges)">
            Save
        </button>
    </EditForm>
}
