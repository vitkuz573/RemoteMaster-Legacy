@page "/Admin/Users"

@rendermode InteractiveServer

@using Microsoft.AspNetCore.Identity
@using RemoteMaster.Server.Aggregates.ApplicationUserAggregate
@using RemoteMaster.Server.Components.Account.Shared
@using RemoteMaster.Server.Components.Admin.Dialogs

@inject NavigationManager NavigationManager
@inject UserManager<ApplicationUser> UserManager
@inject IUserStore<ApplicationUser> UserStore

<PageTitle>Manage Users</PageTitle>

<StatusMessage UseHttpContext="false" Message="@Message" />

<div class="space-y-6">

    <!-- Form -->
    <div class="w-full">
        <EditForm Model="Input" OnValidSubmit="OnValidSubmitAsync" class="space-y-6" FormName="CreateUser">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-red-500" role="alert" />

            <div>
                <label for="username" class="block text-sm font-medium text-gray-700">Username</label>
                <InputText @bind-Value="Input.Username" id="username" class="mt-1 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" />
                <ValidationMessage For="() => Input.Username" class="text-red-500 mt-1" />
            </div>

            <div>
                <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
                <InputText type="password" @bind-Value="Input.Password" class="mt-1 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" />
                <ValidationMessage For="() => Input.Password" class="text-red-600 mt-1" />
            </div>

            <div>
                <label for="confirm-password" class="block text-sm font-medium text-gray-700">Confirm Password</label>
                <InputText type="password" @bind-Value="Input.ConfirmPassword" class="mt-1 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" />
                <ValidationMessage For="() => Input.ConfirmPassword" class="text-red-600 mt-1" />
            </div>

            <button type="submit" class="w-full rounded-md bg-indigo-600 px-4 py-2 text-lg text-white hover:bg-indigo-700 focus:outline-none">
                @(Input.Id != null ? "Save" : "Create")
            </button>
        </EditForm>
    </div>

    <!-- Users Table -->
    <div class="w-full">
        <div class="mt-4">
            <div class="overflow-hidden border-b border-gray-200 shadow sm:rounded-lg">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
                                Username
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
                                Role
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
                                2FA Status
                            </th>
                            <th scope="col" class="px-6 py-3 text-center text-xs font-medium uppercase tracking-wider text-gray-500">
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-200 bg-white">
                        @foreach (var user in _users)
                        {
                            <tr>
                                <td class="whitespace-nowrap px-6 py-4 text-sm font-medium text-gray-900">
                                    <div class="flex items-center">
                                        @user.UserName
                                    </div>
                                </td>
                                <td class="whitespace-nowrap px-6 py-4 text-sm text-gray-500">
                                    <div class="flex items-center">
                                        @(_userRoles.TryGetValue(user, out var role) ? string.Join(", ", role) : "No Roles")
                                    </div>
                                </td>
                                <td class="whitespace-nowrap px-6 py-4 text-sm text-gray-500">
                                    <div class="flex items-center">
                                        @(_userTwoFactorStatus.ContainsKey(user) && _userTwoFactorStatus[user] ? "Enabled" : "Disabled")
                                    </div>
                                </td>
                                <td class="whitespace-nowrap px-6 py-4 text-center">
                                    <div class="flex items-center justify-center">
                                        @if (!_userRoles[user].Contains("RootAdministrator") && !_userRoles[user].Contains("ServiceUser"))
                                        {
                                            <button class="rounded-md bg-red-600 px-4 py-2 text-sm text-white hover:bg-red-700 focus:outline-none" @onclick="() => ShowDeleteConfirmation(user)">
                                                Delete
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<ConfirmationDialog @ref="_confirmationDialog" Title="Confirm Delete" Message="Are you sure you want to delete this user?" OnConfirm="OnConfirmDelete" />
