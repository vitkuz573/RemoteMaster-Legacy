@page "/Admin/Users"

@namespace RemoteMaster.Server.Components.Admin.Pages

@using Microsoft.AspNetCore.Identity
@using RemoteMaster.Server.Components.Account.Shared
@using RemoteMaster.Server.Data

@inject UserManager<ApplicationUser> UserManager
@inject RoleManager<IdentityRole> RoleManager
@inject IUserStore<ApplicationUser> UserStore
@inject ApplicationDbContext ApplicationDbContext
@inject NavigationManager NavigationManager

<PageTitle>Manage Users</PageTitle>

<div class="flex flex-wrap">
    <!-- Form -->
    <div class="mb-6 w-full px-3 md:w-1/2">
        <StatusMessage Message="@Message" />
        <EditForm Model="Input" OnValidSubmit="OnValidSubmitAsync" class="space-y-6" FormName="CreateUser">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-red-500" role="alert" />

            <div class="grid-cols-3 grid gap-6">
                <div class="col-span-3">
                    <label for="username" class="block text-sm font-medium text-gray-700">Username</label>
                    <InputText @bind-Value="Input.Username" id="username" class="mt-1 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" />
                    <ValidationMessage For="() => Input.Username" class="text-red-500 mt-1" />
                </div>

                <div class="col-span-3">
                    <label for="role" class="block text-sm font-medium text-gray-700">Role</label>
                    <InputSelect @bind-Value="Input.Role" id="role" class="mt-1 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500">
                        @foreach (var role in _roles)
                        {
                            <option value="@role.Name">@role.Name</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="() => Input.Role" class="text-red-500 mt-1" />
                </div>

                <div class="col-span-3">
                    <label for="organizations" class="block text-sm font-medium text-gray-700">Organizations</label>
                    <InputSelect @bind-Value="Input.Organizations" id="organizations" multiple class="mt-1 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500">
                        @foreach (var organization in _organizations)
                        {
                            <option value="@organization.OrganizationId.ToString()">@organization.Name</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="() => Input.Organizations" class="text-red-500 mt-1" />
                </div>

                <div class="col-span-3">
                    <label for="organizationalUnits" class="block text-sm font-medium text-gray-700">Organizational Units</label>
                    <InputSelect @bind-Value="Input.OrganizationalUnits" id="organizationalUnits" multiple class="mt-1 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500">
                        @foreach (var organizationalUnit in _organizationalUnits)
                        {
                            <option value="@organizationalUnit.NodeId.ToString()">@organizationalUnit.Name</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="() => Input.OrganizationalUnits" class="text-red-500 mt-1" />
                </div>

                <div class="col-span-3">
                    <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
                    <InputText type="password" @bind-Value="Input.Password" class="mt-1 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" />
                    <ValidationMessage For="() => Input.Password" class="text-red-600 mt-1" />
                </div>

                <div class="col-span-3">
                    <label for="confirm-password" class="block text-sm font-medium text-gray-700">Confirm Password</label>
                    <InputText type="password" @bind-Value="Input.ConfirmPassword" class="mt-1 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" />
                    <ValidationMessage For="() => Input.ConfirmPassword" class="text-red-600 mt-1" />
                </div>
            </div>

            <button type="submit" class="w-full rounded-md bg-indigo-600 px-4 py-2 text-lg text-white hover:bg-indigo-700 focus:outline-none">
                @(Input.Id != null ? "Save" : "Create")
            </button>
        </EditForm>
    </div>

    <!-- Users Table -->
    <div class="mb-6 w-full px-3 md:w-1/2">
        <div class="mt-4">
            <div class="overflow-hidden border-b border-gray-200 shadow sm:rounded-lg">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
                                Username
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
                                Role
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-200 bg-white">
                        @foreach (var user in _users)
                        {
                            <tr>
                                <td class="whitespace-nowrap px-6 py-4 text-sm font-medium text-gray-900">
                                    @user.UserName
                                </td>
                                <td class="whitespace-nowrap px-6 py-4 text-sm text-gray-500">
                                    @(_userRoles.ContainsKey(user) ? string.Join(", ", _userRoles[user]) : "No Roles")
                                </td>
                                @if (!_userRoles[user].Contains("RootAdministrator"))
                                {
                                    <td class="whitespace-nowrap px-6 py-4 text-right">
                                        <div class="flex justify-end">
                                            <EditForm Model="_userPlaceholderModels[user.UserName]" OnValidSubmit="() => EditUser(user)" FormName="@($"editUserForm-{user.Id}")">
                                                <button class="mr-2 rounded-md bg-blue-600 px-4 py-2 text-sm text-white hover:bg-blue-700 focus:outline-none">
                                                    Edit
                                                </button>
                                            </EditForm>
                                            <EditForm Model="_userPlaceholderModels[user.UserName]" OnValidSubmit="() => OnDeleteAsync(user)" FormName="@($"deleteUserForm-{user.Id}")">
                                                <button class="rounded-md bg-red-600 px-4 py-2 text-sm text-white hover:bg-red-700 focus:outline-none">
                                                    Delete
                                                </button>
                                            </EditForm>
                                        </div>
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
