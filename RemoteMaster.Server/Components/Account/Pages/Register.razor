@page "/Account/Register"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using RemoteMaster.Server.Data

@inject UserManager<ApplicationUser> UserManager
@inject IUserStore<ApplicationUser> UserStore
@inject SignInManager<ApplicationUser> SignInManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject ILogger<Register> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager
@inject ApplicationDbContext ApplicationDbContext

<PageTitle>Register</PageTitle>

<div class="flex min-h-screen items-center justify-center bg-gray-900 px-4 sm:px-6 lg:px-8">
    <div class="w-full max-w-md space-y-8">
        <div class="rounded-lg bg-white shadow-xl">
            <div class="p-8">
                <h2 class="mb-4 text-center text-3xl font-bold text-gray-800">Register</h2>
                <StatusMessage Message="@Message" />
                <EditForm Model="Input" asp-route-returnUrl="@ReturnUrl" method="post" OnValidSubmit="RegisterUser" FormName="register">
                    <DataAnnotationsValidator />
                    <ValidationSummary class="mb-4 text-red-600" role="alert" />
                    <div class="mb-4">
                        <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
                        <InputText @bind-Value="Input.Email" class="mt-1 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 placeholder-gray-400 shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" />
                        <ValidationMessage For="() => Input.Email" class="text-red-600 mt-2" />
                    </div>
                    <div class="mb-4">
                        <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
                        <InputText type="password" @bind-Value="Input.Password" class="mt-1 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 placeholder-gray-400 shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" />
                        <ValidationMessage For="() => Input.Password" class="text-red-600 mt-2" />
                    </div>
                    <div class="mb-6">
                        <label for="confirm-password" class="block text-sm font-medium text-gray-700">Confirm Password</label>
                        <InputText type="password" @bind-Value="Input.ConfirmPassword" class="mt-1 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 placeholder-gray-400 shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" />
                        <ValidationMessage For="() => Input.ConfirmPassword" class="text-red-600 mt-2" />
                    </div>
                    <div class="mb-4">
                        <label for="organizationName" class="block text-sm font-medium text-gray-700">Organization Name</label>
                        <InputText @bind-Value="Input.OrganizationName" id="organizationName" class="mt-1 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 placeholder-gray-400 shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" />
                        <ValidationMessage For="() => Input.OrganizationName" class="text-red-600 mt-2" />
                    </div>
                    <button type="submit" class="w-full rounded-md bg-indigo-600 px-4 py-2 text-lg text-white hover:bg-indigo-700 focus:outline-none">
                        Register
                    </button>
                </EditForm>
                <div class="mt-4 text-center text-sm text-gray-600">
                    Use another service to register.
                </div>
                <ExternalLoginPicker />
            </div>
        </div>
    </div>
</div>

