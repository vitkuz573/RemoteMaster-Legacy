// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RemoteMaster.Server.Data;

#nullable disable

namespace RemoteMaster.Server.Data.Migrations.TelegramBotDbContextMigrations
{
    [DbContext(typeof(TelegramBotDbContext))]
    [Migration("20240911044706_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RemoteMaster.Server.Aggregates.TelegramBotAggregate.TelegramBot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BotToken")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TelegramBots");
                });

            modelBuilder.Entity("RemoteMaster.Server.Aggregates.TelegramBotAggregate.TelegramBotChatId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatId")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<int>("TelegramBotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TelegramBotId");

                    b.ToTable("TelegramBotChatId");
                });

            modelBuilder.Entity("RemoteMaster.Server.Aggregates.TelegramBotAggregate.TelegramBotChatId", b =>
                {
                    b.HasOne("RemoteMaster.Server.Aggregates.TelegramBotAggregate.TelegramBot", "TelegramBot")
                        .WithMany("ChatIds")
                        .HasForeignKey("TelegramBotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TelegramBot");
                });

            modelBuilder.Entity("RemoteMaster.Server.Aggregates.TelegramBotAggregate.TelegramBot", b =>
                {
                    b.Navigation("ChatIds");
                });
#pragma warning restore 612, 618
        }
    }
}
