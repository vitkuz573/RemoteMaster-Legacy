// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RemoteMaster.Server.Data;

#nullable disable

namespace RemoteMaster.Server.Data.Migrations
{
    [DbContext(typeof(NodesDataContext))]
    [Migration("20231115024954_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RemoteMaster.Server.Models.Node", b =>
                {
                    b.Property<Guid>("NodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NodeType")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NodeId");

                    b.HasIndex("ParentId");

                    b.ToTable("Nodes");

                    b.HasDiscriminator<string>("NodeType").HasValue("Node");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("RemoteMaster.Server.Models.Computer", b =>
                {
                    b.HasBaseType("RemoteMaster.Server.Models.Node");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MACAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Computer");
                });

            modelBuilder.Entity("RemoteMaster.Server.Models.Folder", b =>
                {
                    b.HasBaseType("RemoteMaster.Server.Models.Node");

                    b.HasDiscriminator().HasValue("Folder");
                });

            modelBuilder.Entity("RemoteMaster.Server.Models.Node", b =>
                {
                    b.HasOne("RemoteMaster.Server.Models.Node", "Parent")
                        .WithMany("Nodes")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("RemoteMaster.Server.Models.Node", b =>
                {
                    b.Navigation("Nodes");
                });
#pragma warning restore 612, 618
        }
    }
}
